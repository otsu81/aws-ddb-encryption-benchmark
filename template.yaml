AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Deploys DynamoDB tables and Lambda functions for evaluating price and performance impact for encrypting and decrypting information with various methods

Parameters:
  SecretArn:
    Type: String
    Default: arn:aws:secretsmanager:eu-north-1:161456459824:secret:benchmark/aes-0yvBOe
    Description: The ARN of the 256-bit AES key stored in secrets manager
  KMSKeyArn:
    Type: String
    Default: arn:aws:kms:eu-north-1:161456459824:key/a6962c8b-7cb5-48e0-8b20-15734c824f50
    Description: The KeyID of the KMS key used to encrypt, decrypt and store secrets manager values

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

Resources:
  noEncryption:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/none/
      Handler: decrypt.handler
      Runtime: nodejs14.x
      Environment:
        Variables:
          DDB_TABLE: !Ref noEncryptionTable
      Policies:
        Version: '2012-10-17'
        Statement:
        - Sid: AllowGetNoEncryptionTable
          Effect: Allow
          Action: dynamodb:GetItem
          Resource: !GetAtt noEncryptionTable.Arn

  aesEnvVar:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/aesEnvVariable/
      Handler: decrypt.handler
      Runtime: nodejs14.x
      Environment:
        Variables:
          DDB_TABLE: !Ref aesEncryptionTable
          KEY: '{{resolve:secretsmanager:benchmark/aes:SecretString:AES_KEY}}'
      Policies:
        Version: '2012-10-17'
        Statement:
        - Sid: AllowGetEncryptedItem
          Effect: Allow
          Action: dynamodb:GetItem
          Resource: !GetAtt aesEncryptionTable.Arn


  aesSecrMgr:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/aesDecryptionSecrMgr/
      Handler: decrypt.handler
      Runtime: nodejs14.x
      Environment:
        Variables:
          DDB_TABLE: !Ref aesEncryptionTable
      Policies:
        Version: '2012-10-17'
        Statement:
        - Sid: AllowGetEncryptedItem
          Effect: Allow
          Action: dynamodb:GetItem
          Resource: !GetAtt aesEncryptionTable.Arn
        - Sid: AllowGetSecret
          Effect: Allow
          Action: secretsmanager:GetSecretValue
          Resource: !Ref SecretArn
        - Action: kms:Decrypt
          Effect: Allow
          Resource: !Ref KMSKeyArn

  aesSecrMgrPooling:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/aesDecryptionSecrMgrPooling/
      Handler: decrypt.handler
      Runtime: nodejs14.x
      Environment:
        Variables:
          DDB_TABLE: !Ref aesEncryptionTable
      Policies:
        Version: '2012-10-17'
        Statement:
        - Sid: AllowGetEncryptedItem
          Effect: Allow
          Action: dynamodb:GetItem
          Resource: !GetAtt aesEncryptionTable.Arn
        - Sid: AllowGetSecret
          Effect: Allow
          Action: secretsmanager:GetSecretValue
          Resource: !Ref SecretArn
        - Action: kms:Decrypt
          Effect: Allow
          Resource: !Ref KMSKeyArn

  kmsEncryption:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/kms/
      Handler: decrypt.handler
      Runtime: nodejs14.x
      Environment:
        Variables:
          DDB_TABLE: !Ref kmsEncryptionTable
      Policies:
        Version: '2012-10-17'
        Statement:
        - Sid: AllowGetEncryptedItem
          Effect: Allow
          Action: dynamodb:GetItem
          Resource: !GetAtt kmsEncryptionTable.Arn
        - Action: kms:Decrypt
          Effect: Allow
          Resource: !Ref KMSKeyArn

  kmsItemEncryption:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/kmsItem/
      Handler: decrypt.handler
      Runtime: nodejs14.x
      Environment:
        Variables:
          DDB_TABLE: !Ref kmsItemEncryptionTable
      Policies:
        Version: '2012-10-17'
        Statement:
        - Sid: AllowGetEncryptedItem
          Effect: Allow
          Action: dynamodb:GetItem
          Resource: !GetAtt kmsItemEncryptionTable.Arn
        - Action: kms:Decrypt
          Effect: Allow
          Resource: !Ref KMSKeyArn

  noEncryptionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: benchmark-noEncryptionTable
      AttributeDefinitions:
        - AttributeName: cloudKeyId
          AttributeType: S
      KeySchema:
        - AttributeName: cloudKeyId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  kmsEncryptionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: benchmark-kmsEncryptionTable
      AttributeDefinitions:
        - AttributeName: cloudKeyId
          AttributeType: S
      KeySchema:
        - AttributeName: cloudKeyId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true

  kmsItemEncryptionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: benchmark-kmsItemEncryptionTable
      AttributeDefinitions:
        - AttributeName: cloudKeyId
          AttributeType: S
      KeySchema:
        - AttributeName: cloudKeyId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  aesEncryptionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: benchmark-aesEncryptionTable
      AttributeDefinitions:
        - AttributeName: cloudKeyId
          AttributeType: S
      KeySchema:
        - AttributeName: cloudKeyId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
